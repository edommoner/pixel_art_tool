import{OCTOPUCHI_ALLOWLIST,GAME8_COLOR_LABELS_JA}from"./octopuchi-game8-allowlist.js";const LS_DYNAMIC_BLOCKS="pixelart.dynamicBlocks.v1";function normLabel(s){return(s||"").toString().toLowerCase().replace(/\s+/g,"").replace(/の/g,"").replace(/（.*?）/g,"")}function normId(s){return(s||"").toString().toLowerCase().replace(/^minecraft:/,"").replace(/^bedrock:/,"").replace(/^java:/,"").replace(/\[.*\]$/,"")}const COLOR_ALIAS=new Map([["lightblue","light_blue"],["lightgrey","light_gray"],["grey","gray"]]);function canonColorToken(t){const x=t.toLowerCase();return COLOR_ALIAS.get(x)||x}function basenameNoExt(id){const s=id.split("/").pop();return s?s.replace(/\.[a-z0-9]+$/,""):id}function makeIdAliases(raw){const out=new Set,full=(raw||"").toString().toLowerCase(),bare=normId(full),base=basenameNoExt(bare);out.add(full),out.add(bare),out.add(`minecraft:${bare}`);let m=base.match(/^wool_colored_([a-z_]+)$/);if(m){const c=canonColorToken(m[1]);out.add(`${c}_wool`),out.add(`minecraft:${c}_wool`)}if(m=base.match(/^(?:hardened_clay_stained|stained_hardened_clay)_([a-z_]+)$/),m){const c=canonColorToken(m[1]);out.add(`${c}_terracotta`),out.add(`minecraft:${c}_terracotta`)}if(m=base.match(/^concrete_powder_([a-z_]+)$/),m){const c=canonColorToken(m[1]);out.add(`${c}_concrete_powder`),out.add(`minecraft:${c}_concrete_powder`)}if(m=base.match(/^concrete_([a-z_]+)$/),m){const c=canonColorToken(m[1]);out.add(`${c}_concrete`),out.add(`minecraft:${c}_concrete`)}if(m=base.match(/^glazed_terracotta_([a-z_]+)$/),m){const c=canonColorToken(m[1]);out.add(`${c}_glazed_terracotta`),out.add(`minecraft:${c}_glazed_terracotta`)}if(m=base.match(/^stained_glass(?:_pane)?_([a-z_]+)$/),m){const c=canonColorToken(m[1]);out.add(`${c}_stained_glass`),out.add(`minecraft:${c}_stained_glass`),out.add(`${c}_stained_glass_pane`),out.add(`minecraft:${c}_stained_glass_pane`)}if(m=base.match(/^(?:wool_)?carpet_([a-z_]+)$/),m){const c=canonColorToken(m[1]);out.add(`${c}_carpet`),out.add(`minecraft:${c}_carpet`)}return[...out]}const byId=new Map,byLabel=new Map;for(const e of OCTOPUCHI_ALLOWLIST){if(e.ids)for(const raw of e.ids){const full=(raw||"").toString().toLowerCase(),bare=normId(raw);byId.set(full,e),byId.set(bare,e)}byLabel.set(normLabel(e.label),e)}export function clearDynamicBlocksOnce(){try{localStorage.removeItem(LS_DYNAMIC_BLOCKS)}catch{}}export function loadSavedDynamicBlocks(){try{const raw=localStorage.getItem(LS_DYNAMIC_BLOCKS);if(!raw)return null;const parsed=JSON.parse(raw);return parsed&&parsed.cats?parsed:null}catch{return null}}export function applyOctopuchiGame8Filter(dynamicList){const cats={};for(const key of Object.keys(GAME8_COLOR_LABELS_JA))cats[key]=[];let scanned=0,matched=0;for(const b of dynamicList){const idRaw=(b.id||b.name||b.block||b.bedrock||"").toString(),idKeys=makeIdAliases(idRaw),labelRaw=b.label||b.displayName||"",labelKey=normLabel(labelRaw);scanned++;let m=null;for(const k of idKeys)if(m=byId.get(k),m)break;if(m||(m=byLabel.get(labelKey)),!m)continue;const cat=m.category||"other",rgb=b.rgb||b.color||[0,0,0],ja=labelRaw||m.label||idRaw;cats[cat].push([rgb[0],rgb[1],rgb[2],idRaw||"minecraft:air",ja]),matched++}for(const k of Object.keys(cats))cats[k].length||delete cats[k];const payload={cats:cats,savedAt:Date.now(),stats:{scanned:scanned,matched:matched}};try{localStorage.setItem(LS_DYNAMIC_BLOCKS,JSON.stringify(payload))}catch{}if(matched<20){const sample=dynamicList.slice(0,200).map(x=>(x.id||x.name||x.block||x.bedrock||"")+"");console.warn("[octopuchi-filter] low match. sample ids:",sample.filter(Boolean).slice(0,50))}return payload}export function game8CategoryJa(key){return GAME8_COLOR_LABELS_JA[key]||key}