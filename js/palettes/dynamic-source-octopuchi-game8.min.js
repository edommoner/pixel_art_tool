import{OCTOPUCHI_ALLOWLIST,GAME8_COLOR_LABELS_JA}from"./octopuchi-game8-allowlist.js";const LS_DYNAMIC_BLOCKS="pixelart.dynamicBlocks.v1";function norm(s){return(s||"").toString().replace(/\s+/g,"").replace(/„ÅÆ/g,"")}const byId=new Map,byLabel=new Map;for(const e of OCTOPUCHI_ALLOWLIST){if(e.ids)for(const id of e.ids)byId.set(id,e);byLabel.set(norm(e.label),e)}export function clearDynamicBlocksOnce(){try{localStorage.removeItem(LS_DYNAMIC_BLOCKS)}catch{}}export function loadSavedDynamicBlocks(){try{const raw=localStorage.getItem(LS_DYNAMIC_BLOCKS);if(!raw)return null;const parsed=JSON.parse(raw);return parsed&&parsed.cats?parsed:null}catch{return null}}export function applyOctopuchiGame8Filter(dynamicList){const cats={};for(const key of Object.keys(GAME8_COLOR_LABELS_JA))cats[key]=[];for(const b of dynamicList){const id=b.id||b.name||b.block||b.bedrock||"",label=b.label||b.displayName||"",m=byId.get(id)||byId.get(id.replace(/^minecraft:/,""))||byLabel.get(norm(label));if(!m)continue;const cat=m.category||"other",rgb=b.rgb||b.color||[0,0,0],ja=label||m.label||id;cats[cat].push([rgb[0],rgb[1],rgb[2],id||"minecraft:air",ja])}for(const k of Object.keys(cats))cats[k].length||delete cats[k];const payload={cats:cats,savedAt:Date.now()};try{localStorage.setItem(LS_DYNAMIC_BLOCKS,JSON.stringify(payload))}catch{}return payload}export function game8CategoryJa(key){return GAME8_COLOR_LABELS_JA[key]||key}