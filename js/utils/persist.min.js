const STORAGE_KEY="pixel_art_tool.settings.v1";function readStore(){try{return JSON.parse(localStorage.getItem(STORAGE_KEY)||"{}")}catch{return{}}}function writeStore(obj){try{localStorage.setItem(STORAGE_KEY,JSON.stringify(obj))}catch{}}function getValue(el){const t=(el.type||el.tagName).toLowerCase();if("checkbox"===t)return!!el.checked;if("number"===t||"range"===t){const n=parseFloat(el.value);return Number.isFinite(n)?n:el.value}return el.value}function setValue(el,v){const t=(el.type||el.tagName).toLowerCase();"checkbox"===t?el.checked=!!v:el.value=v}export function initPersistence(root=document){const saved=readStore(),controls=Array.from(root.querySelectorAll("[data-persist]"));controls.forEach(el=>{const k=el.dataset.persist;saved.hasOwnProperty(k)&&(setValue(el,saved[k]),el.dispatchEvent(new Event("change",{bubbles:!0})),"range"!==el.type&&"number"!==el.type&&"color"!==el.type||el.dispatchEvent(new Event("input",{bubbles:!0})))});let tid=null;const saveAll=()=>{const next={};controls.forEach(el=>next[el.dataset.persist]=getValue(el)),writeStore(next)},scheduleSave=()=>{clearTimeout(tid),tid=setTimeout(saveAll,100)};return controls.forEach(el=>{el.addEventListener("change",scheduleSave),"range"!==el.type&&"number"!==el.type&&"text"!==el.type&&"color"!==el.type||el.addEventListener("input",scheduleSave)}),{saveNow:saveAll,clear:()=>localStorage.removeItem(STORAGE_KEY),dump:()=>readStore()}}