import{els}from"./ui/elements.js";import{saveAs}from"file-saver";import{blockcatLabelJa,inferBlockcatFromRow,BLOCKCAT_ORDER}from"./palettes/dynamic-source-octopuchi-game8.js";const LS_SORT="pixelart.countsSortMode.v1";let lastRenderedRows=null;function loadSort(){try{return localStorage.getItem(LS_SORT)||"count"}catch{return"count"}}function saveSort(mode){try{localStorage.setItem(LS_SORT,mode)}catch{}}let lastGrouped=null,lastSort=loadSort();function rgbToHsv(r,g,b){r/=255,g/=255,b/=255;const max=Math.max(r,g,b),min=Math.min(r,g,b),d=max-min;let h=0;0!==d&&(h=max===r?(g-b)/d%6:max===g?(b-r)/d+2:(r-g)/d+4,h*=60,h<0&&(h+=360));const s=0===max?0:d/max,v=max;return{h:h,s:s,v:v}}function groupCountsByBlockCategory(img,state){const palette=(state.paletteSnapshot&&state.paletteSnapshot.length?state.paletteSnapshot:state.activePalette)||[],keyToInfo=new Map;for(const row of palette){const k=`${0|+row[0]},${0|+row[1]},${0|+row[2]}`;keyToInfo.set(k,{id:(row[3]||"").toString(),label:(row[4]||"").toString(),rgb:[0|row[0],0|row[1],0|row[2]]})}const counts=new Map,data=img.data;for(let i=0;i<data.length;i+=4){if(255!==data[i+3])continue;const key=`${data[i]},${data[i+1]},${data[i+2]}`,info=keyToInfo.get(key);if(!info)continue;const rec=counts.get(info.id)||{id:info.id,label:info.label||info.id,rgb:info.rgb,count:0};rec.count++,counts.set(info.id,rec)}const groups={};for(const rec of counts.values()){const row=[rec.rgb[0],rec.rgb[1],rec.rgb[2],rec.id,rec.label],cat=inferBlockcatFromRow(row)||"other";(groups[cat]||(groups[cat]=[])).push(rec)}return groups}function sortItems(items,mode){return"color"===mode?items.sort((a,b)=>{const ha=rgbToHsv(a.rgb[0],a.rgb[1],a.rgb[2]),hb=rgbToHsv(b.rgb[0],b.rgb[1],b.rgb[2]);return ha.h!==hb.h?ha.h-hb.h:ha.s!==hb.s?hb.s-ha.s:hb.v-ha.v}):items.sort((a,b)=>b.count-a.count||a.label.localeCompare(b.label,"ja"))}function renderCounts(groups,sortMode){const host=document.getElementById("woolTable")||document.getElementById("countsPanel")||document.getElementById("tab3")||document.body;let wrap=document.getElementById("countsWrap");wrap?wrap.innerHTML="":(wrap=document.createElement("div"),wrap.id="countsWrap",host.innerHTML="",host.appendChild(wrap));const bar=document.createElement("div");bar.id="countsSortBar",bar.style.display="flex",bar.style.gap="8px",bar.style.alignItems="center",bar.style.margin="6px 0",bar.innerHTML=`\n    <strong>並び替え:</strong>\n    <label><input type="radio" name="countsSort" value="count" ${"count"===sortMode?"checked":""}> 個数</label>\n    <label><input type="radio" name="countsSort" value="color" ${"color"===sortMode?"checked":""}> 色</label>\n  `,wrap.appendChild(bar);const table=document.createElement("table");table.className="counts-table",table.style.borderCollapse="collapse",table.style.width="100%",table.innerHTML='\n    <thead>\n      <tr>\n      <th style="text-align:left;padding:4px;border-bottom:1px solid #ccc;">色</th>\n      <th style="text-align:right;padding:4px;border-bottom:1px solid #ccc;">個数</th>\n      <th style="text-align:left;padding:4px;border-bottom:1px solid #ccc;">ブロック</th>\n        <th style="text-align:left;padding:4px;border-bottom:1px solid #ccc;">ID</th>\n      </tr>\n    </thead>\n    <tbody></tbody>\n  ';const tbody=table.querySelector("tbody"),keys=Object.keys(groups),ordered=BLOCKCAT_ORDER.filter(k=>keys.includes(k)).concat(keys.filter(k=>!BLOCKCAT_ORDER.includes(k)));lastRenderedRows=[];for(const cat of ordered){const items=sortItems([...groups[cat]],sortMode),trHead=document.createElement("tr");trHead.innerHTML=`<td colspan="4" style="padding:8px 4px;font-weight:700;border-top:1px solid #ddd;background:#f8f8f8;">\n      ${blockcatLabelJa(cat)}（${items.length}）\n    </td>`,tbody.appendChild(trHead);const catLabel=blockcatLabelJa(cat);for(const item of items){const[r,g,b]=item.rgb,swatch=`<span style="display:inline-block;width:14px;height:14px;border:1px solid #0003;background:rgb(${r},${g},${b});vertical-align:middle;margin-right:6px;"></span>`,tr=document.createElement("tr");tr.innerHTML=`\n      <td style="padding:4px;">${swatch} </td>\n      <td style="padding:4px;text-align:right;">${item.count}</td>\n      <td style="padding:4px;">${escapeHtml(item.label)}</td>\n        <td style="padding:4px;font-family:monospace;">${escapeHtml(item.id)}</td>\n      `,tbody.appendChild(tr),lastRenderedRows.push({category_label:catLabel,id:item.id,label:item.label,r:r,g:g,b:b,count:item.count})}}wrap.appendChild(table),wrap.querySelectorAll('input[name="countsSort"]').forEach(r=>{r.addEventListener("change",ev=>{const mode="color"===ev.target.value?"color":"count";lastSort=mode,saveSort(mode),renderCounts(groups,mode)})})}function escapeHtml(s){return(null==s?"":String(s)).replaceAll("&","&amp;").replaceAll("<","&lt;").replaceAll(">","&gt;").replaceAll('"',"&quot;")}export function updateCountsTable(img,state){const groups=groupCountsByBlockCategory(img,state);lastGrouped=groups,renderCounts(groups,lastSort)}export function exportCountsCsv(){if(!lastRenderedRows||!lastRenderedRows.length)return void alert("先に画像を変換してください。");const lines=["category_label,label,count"];for(const it of lastRenderedRows)lines.push([safeCsv(it.category_label),safeCsv(it.label),it.count].join(","));const csv=lines.join("\n"),blob=new Blob(["\ufeff"+csv],{type:"text/csv;charset=utf-8"}),a=document.createElement("a");a.download="counts_grouped_by_block_category.csv",a.href=URL.createObjectURL(blob),document.body.appendChild(a),a.click(),setTimeout(()=>{URL.revokeObjectURL(a.href),a.remove()},0)}function safeCsv(s){const t=null==s?"":String(s);return/[",\n\r]/.test(t)?`"${t.replaceAll('"','""')}"`:t}